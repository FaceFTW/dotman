name: Build assets for a Release

on:
  release:
    types: [published]

jobs:
  build-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build_name:
          [linux-x64-musl, linux-arm64-musl, macos-arm64, windows-x64-msvc]
        include:
          - build_name: linux-x64-musl
            os: ubuntu-latest
            exe_suffix: ""
            name_suffix: ""
            target: x86_64-unknown-linux-musl
          - build_name: linux-arm64-musl
            os: ubuntu-latest
            exe_suffix: ""
            name_suffix: ""
            target: aarch64-unknown-linux-musl
          - build_name: macos-arm64
            os: macos-latest
            exe_suffix: ""
            name_suffix: ".arm"
            target: aarch64-apple-darwin
          - build_name: windows-x64-msvc
            os: windows-latest
            exe_suffix: ".exe"
            name_suffix: ".exe"
            target: x86_64-pc-windows-msvc
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Update Rust
        run: |
          rustup update
          rustup target add ${{ matrix.target }}

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: "~/.cargo"
          key: cargo-main

      - name: Build
        shell: bash
        run: |
          _cargo="cargo"
          if [ "${{ matrix.build_name }}" = "linux-arm64-musl" ]; then
            cargo install cross
            _cargo="cross"
          fi
          $_cargo build --release --locked --verbose --target ${{ matrix.target }}

      - name: Upload asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} target/${{ matrix.target }}/release/dotman${{ matrix.exe_suffix }}#dotman-${{ matrix.build_name}}${{ matrix.name_suffix }}

  build-completions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Update Rust
        run: rustup update

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: "~/.cargo"
          key: cargo-main

      - name: Generate Completions
        run: |
          cargo build

          SHELLS="bash elvish fish powershell zsh"

          mkdir completions
          for shell in $SHELLS; do
            cargo run -- gen-completions --shell $shell --to completions
          done

          zip -r completions.zip completions

      - name: Upload Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} completions.zip#shell-completions-zip

  cargo-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Login to crates.io
        run: cargo login ${{ secrets.CRATES_IO_TOKEN }}

      - name: Publish to crates.io
        run: cargo publish
